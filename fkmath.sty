% ================================================================== %
%                                                                    %
%                         Requirement Things                         %
%                                                                    %
% ================================================================== %

\NeedsTeXFormat{LaTeX2e}
\ProvidesPackage{fkmath}[2018/10/23 v0.01 math macro package]
%% Just to be extra clear: called fkmath because those are my
%% initials. Not an explitive.



% ================================================================== %
%                                                                    %
%                              Packages                              %
%                                                                    %
% ================================================================== %

% For most of the math symbols, and nice things like align
% environment
\RequirePackage{amsmath, amssymb, amsthm}

% For `\shortintertext{}` and other things.
\RequirePackage{mathtools}

% For checkmark and xmark when confirming / denying claims
\RequirePackage{pifont}

% For cancelling stuff, duh
\RequirePackage{cancel}

% For bold math things
\RequirePackage{bm}

% For leftbar environment (useful in proving lemmas, etc)
\RequirePackage{mdframed}

% Super dank matrix package
\RequirePackage{nicematrix}

% For iff proof environment
\RequirePackage{enumitem}

% For defining big math macros
\RequirePackage{scalerel}

% ================================================================== %
%                                                                    %
%                             Math Macros!                           %
%                                                                    %
% ================================================================== %


% ----------------------- General Math Stuff ----------------------- %

% Useful shortcuts for when typing is just too hard
\newcommand{\mrm}[1]{\ensuremath{\mathrm{#1}}}
\newcommand{\mc}[1]{\ensuremath{\mathcal{#1}}}
\newcommand{\mb}[1]{\ensuremath{\mathbf{#1}}}

% Avoid exiting math mode for such that
\newcommand{\st}{\mrm{\ s.t.\ }}

% The default mod command is trash for some reason
\renewcommand{\mod}[1]{\ \mrm{mod}\ #1}

% Define lcm command
\DeclareMathOperator{\lcm}{lcm}

% Useful shortcut commands for common fields
\newcommand{\FF}{\mathbb{F}}
\newcommand{\CC}{\mathbb{C}}
\newcommand{\RR}{\mathbb{R}}
\newcommand{\QQ}{\mathbb{Q}}
\newcommand{\ZZ}{\mathbb{Z}}
\newcommand{\NN}{\mathbb{N}}

% Expected value
\newcommand{\EE}{\mathbb{E}}

% Partial differential
\newcommand{\pdd}{\mathop{}\,\partial}

% Total differential
\newcommand{\dd}{\mathop{}\,\mathrm{d}}

% Define partial derivative and ordinary derivative things
\newcommand{\pd}[3][]{\frac{\partial^{#1} {#2}}{\partial {#3}^{#1}}}
\newcommand{\od}[3][]{\frac{\mrm{d}^{#1}\! {#2}}{\mrm{d} {#3}^{#1}}}

% Make an infinite sum (saves time when doing lots of method of
% frobenius and stuff)
\newcommand{\series}[1][0]{\sum_{n=#1}^{\infty}}

% Multichoose environment.
% Found at https://tex.stackexchange.com/a/350287
\newcommand{\multichoose}[2]{
\left.\mathchoice
  {\left(\kern-0.48em\ch{#1}{#2}\kern-0.48em\right)}
  {\big(\kern-0.30em\ch{\smash{#1}}{\smash{#2}}\kern-0.30em\big)}
  {\left(\kern-0.30em\ch{\smash{#1}}{\smash{#2}}\kern-0.30em\right)}
  {\left(\kern-0.30em\ch{\smash{#1}}{\smash{#2}}\kern-0.30em\right)}
\right.}

% Overline, more tersely. For things like complements, closures, etc.
\newcommand{\ol}[1]{\overline{#1}}

% Centered vdots in align-like environments
% \newcommand{\cvdots}{\mathrel{\makebox[\widthof{=}]{\vdots}}}
\newcommand{\cvdots}{\setbox0\hbox{=}\mathrel{\makebox[\wd0]{\hfil\vdots\hfil}}}

% Add sign operator
\DeclareMathOperator{\sgn}{sgn}


% ----------------------------- Linalg ----------------------------- %

% For properly aligning things w/ neg numbers in matrix environments
\newcommand{\ph}{\phantom{-}}

% For augmented matrices
\newenvironment{amatrix}[1]{
  \left[\begin{array}{@{}*{#1}{c}|c@{}}
}{%
  \end{array}\right]
}

% Span of a set of vectors
\newcommand{\vspan}[1]{\ensuremath{\mathrm{span}\pn{#1}}}

% Projection onto something
\newcommand{\proj}[3][]{\ensuremath{\mrm{proj}_{#2}\pn[#1]{#3}}}

% Transpose
\newcommand{\T}{\mathsf{T}}

\DeclareMathOperator*{\argmax}{arg\,max}
\DeclareMathOperator*{\argmin}{arg\,min}

% ---------------------------- Analysis ---------------------------- %

% I'm gonna make a controversial decision here and just define the
% non-lunate epsilon to be the default epsilon, because honestly, the
% lunate epsilon just looks bad to me.
\let\lunateepsilon\epsilon
\renewcommand{\epsilon}{\varepsilon}

% Symbols for upper and lower sums (integral with line on top /
% bottom), found here:
% https://tex.stackexchange.com/questions/44237/lower-and-upper-riemann-integrals/388566
\def\upint{\mathchoice%
    {\mkern13mu\overline{\vphantom{\intop}\mkern7mu}\mkern-20mu}%
    {\mkern7mu\overline{\vphantom{\intop}\mkern7mu}\mkern-14mu}%
    {\mkern7mu\overline{\vphantom{\intop}\mkern7mu}\mkern-14mu}%
    {\mkern7mu\overline{\vphantom{\intop}\mkern7mu}\mkern-14mu}%
  \int}
\def\lowint{\mkern3mu\underline{\vphantom{\intop}\mkern7mu}\mkern-10mu\int}


% ----------------------------- Algebra ---------------------------- %

% Commonly-used algebra-flavored macros here; more esoteric ones
% remain in agstract.sty

% Group + ring things
\newcommand{\group}[1]{(#1, +)}
\newcommand{\groupwop}[2]{(#1, #2)} % Bring Your Own Group Op!
\newcommand{\units}[2][]{\pn[#1]{#2}^\times} % Units of a group

\newcommand{\ring}[2][]{\pn[#1]{#2, +, \cdot}}
\newcommand{\ringwop}[4][]{\pn[#1]{#2, #3, #4}}

% Adjoining things onto rings. Literate TeX, or something.
\newcommand{\adjoin}[2][]{\bk[#1]{#2}}

% Some special stuff for the integers
\newcommand{\zmod}[1]{\ZZ/ #1 \ZZ} % Integers mod n
\newcommand{\zpmod}[1]{\group{\ZZ}} % Now with plus
\newcommand{\zmmod}[1]{(\uzmod{#1}, \cdot)} % Now with times


% ------------------ The Categorical Imperative ;) ----------------- %

% Domain and codomain
\newcommand{\dom}[2][]{\mrm{dom}\pn[#1]{#2}}
\newcommand{\cod}[2][]{\mrm{cod}\pn[#1]{#2}}

% Identity morphism
\newcommand{\id}[1][]{\mrm{id}_{#1}}

% TODO: Rethink what exactly needs to be kept here, and how best to
% use it
\newcommand{\ob}{\mrm{ob}}
\newcommand{\homm}{\mrm{hom}}
\newcommand{\op}{^\mrm{op}}


% ------------------------ Topological stuff ------------------------%

% Big connected sum
\DeclareMathOperator*{\csum}{\scalerel*{\#}{\sum}}

% Homotopy Equivalence
\newcommand{\htop}[1][A]{\ensuremath\simeq_{\mrm{rel}\, #1}}

% \newcommand{\into}[2][]{\ensuremath\xhookrightarrow[#1]{#2}}
\newcommand{\into}{\ensuremath\hookrightarrow}
\newcommand{\onto}{\ensuremath\twoheadrightarrow}
% See
% https://tex.stackexchange.com/questions/281732/special-mathematics-arrow-for-1-1-and-onto-functions
\newcommand{\bij}{\ensuremath\lhook\joinrel\twoheadrightarrow}

% ---------------------- Statements and Proofs --------------------- %

% For confirming or denying various statements (useful when you're
% doing casework in a proof and want to have some visual separator)
\newcommand{\cmark}{\text{\ding{51}}}%
\newcommand{\xmark}{\text{\ding{55}}}%

% Put the qed box all the way to the right
\let\oldqed\qed
\renewcommand{\qed}{\hfill $\blacksquare$}

% Ez contradiction
\newcommand{\contra}{\ensuremath{(\Rightarrow\Leftarrow)}}

% The indentation for customized iff labels really grinds my gears.
% Hence, a new environment to make everything right in the world
% again.
\newcommand*{\iffenum}[1]{\expandafter\@iffenum\csname c@#1\endcsname}
\newcommand*{\@iffenum}[1]{%
  \ifcase#1\or {$(\Rightarrow):$}\or {$(\Leftarrow):$}\else\@ctrerr\fi
}
\AddEnumerateCounter{\iffenum}{\@iffenum}{$(\Rightarrow):$}
\newenvironment{iffproof}{%
  \begin{enumerate}[label=\iffenum*, leftmargin=4em]%
  }{\end{enumerate}}

% TODO: make these less ugly

% leftbar --> useful environment for proving lemmas and the like
\newmdenv[
  skipabove=5,
  skipbelow=5,
  innerleftmargin = .5em,
  innertopmargin = .5em,
  innerbottommargin = .5em,
  innerrightmargin = 0pt,
  rightmargin = 0pt,
  leftmargin = 2em,
  linewidth = 2pt,
  topline = false,
  rightline = false,
  bottomline = false
  ]{leftbar}

\newmdtheoremenv[
  leftline=false,
  rightline=false,
  skipabove=10,
  linewidth=.8pt,
  linecolor=black!80,
  backgroundcolor=gray!10,
  innertopmargin=\topskip,
  splittopskip=\topskip,
  ntheorem=true,
  ]{theorem}{Theorem}[section]

\newmdtheoremenv[
  leftline=false,
  rightline=false,
  skipabove=10,
  linewidth=.8pt,
  linecolor=gray!50,
  backgroundcolor=gray!10,
  innertopmargin=\topskip,
  splittopskip=\topskip,
  ntheorem=true,
  ]{lemma}{Lemma}[section]

\newmdtheoremenv[
  leftline=false,
  rightline=false,
  skipabove=10,
  linewidth=.8pt,
  linecolor=gray!50,
  backgroundcolor=gray!10,
  innertopmargin=\topskip,
  splittopskip=\topskip,
  ntheorem=true,
  ]{corollary}{Corollary}[section]


\mdfdefinestyle{theoremstyle}{%
  leftmargin=2em,
  rightmargin=2em,
  skipabove=10,
  skipbelow=10,
  linecolor=black!90,
  linewidth=1pt,
  frametitlerule=true,
  frametitlebackgroundcolor=gray!15,
  innertopmargin=.75\topskip,
  innerbottommargin=.75\topskip,
  ntheorem=true,
}

\mdtheorem[style=theoremstyle]{definition}{Definition}[section]



% --------------------------- Delimiters --------------------------- %

% Useful commands for paired delimiters that'll adjust to fit whatever
% argument you pass --> e.g. (<something>), [<something else>]

% I spent quite some time trying to get sizes to be optional arguments
% that I could pass to the commands below, before discovering (to my
% delight) that somebody had done almost this exact same thing before.
% I then gleefully copy-pasted the stuff below, which was much less
% hard-coded than what I had been doing.

% For the source, see https://tex.stackexchange.com/a/1744

% Auto-sized thingies
\let\size@autol\left  \let\size@autor\right \let\size@autom\middle

% Stop expansion if we have the base thingy
\let\size@basel\relax \let\size@baser\relax \let\size@basem\relax

% Sizes
\let\size@bigl\bigl   \let\size@bigr\bigr   \let\size@bigm\big
\let\size@Bigl\Bigl   \let\size@Bigr\Bigr   \let\size@Bigm\Big
\let\size@biggl\biggl \let\size@biggr\biggr \let\size@biggm\bigg
\let\size@Biggl\Biggl \let\size@Biggr\Biggr \let\size@Biggm\Bigg

% idk
\newcommand{\ldelim}{\relax}
\newcommand{\rdelim}{\relax}
\newcommand{\mdelim}{\relax}

% The thing that'll actually implement the command
% #1 size #2 ldelim #3 rdelim #4 content
\newcommand{\size@command}[4]{{%
  \def\ldelim{\csname size@#1l\endcsname}% tack on size to l delim
  \def\rdelim{\csname size@#1r\endcsname}% tack on size to r delim
  \def\mdelim{\csname size@#1m\endcsname}%
  \ldelim#2#4\rdelim#3% put the stuff in between the things
}}

% Define new delimiter commands with ease!
% #1 name #2 ldelim #3 rdelim
\newcommand{\newdelimcommand}[3]{%
  \expandafter\newcommand\csname size@#1@st\endcsname[1]{%
    \size@command{base}{#2}{#3}{##1}}% ##1 content
  \expandafter\newcommand\csname size@#1@ns\endcsname[2][auto]{%
    % ##1 size ##2 content
    \size@command{##1}{#2}{#3}{##2}}%
  \expandafter\DeclareRobustCommand\csname#1\endcsname{%
    \@ifstar{\csname size@#1@st\endcsname}{\csname size@#1@ns\endcsname}%
  }%
}

% syntactically named delimiters
\newdelimcommand{braces}{\lbrace}{\rbrace}
\newdelimcommand{angles}{\langle}{\rangle}
\newdelimcommand{verts}{\lvert}{\rvert}
\newdelimcommand{Verts}{\lVert}{\rVert}
\newdelimcommand{brackets}{[}{]}
\newdelimcommand{parens}{(}{)}
\newdelimcommand{bras}{\langle}{\rvert}
\newdelimcommand{kets}{\lvert}{\rangle}
\newdelimcommand{floors}{\lfloor}{\rfloor}
\newdelimcommand{ceils}{\lceil}{\rceil}

% Half-open
\newdelimcommand{pnbks}{(}{]}
\newdelimcommand{bkpns}{[}{)}

% semantically named delimiters
\newcommand{\set}{\braces}
\newcommand{\abs}{\verts}
\newcommand{\norm}{\Verts}
\newcommand{\pn}{\parens}
\newcommand{\ip}{\angles}
\newcommand{\bk}{\brackets}
\newcommand{\bra}{\bras}
\newcommand{\ket}{\kets}
\newcommand{\floor}{\floors}
\newcommand{\ceil}{\ceils}
\newcommand{\pnbk}{\pnbks}
\newcommand{\bkpn}{\bkpns}

% Automagic `such that' for set comprehension. Inside an automagic
% delimiter command, the vertical bar will resize appropriately
% Example:
%   \set{ x \in W \MID x > 0 }
\newcommand{\MID}{\;\mdelim\vert\;}
